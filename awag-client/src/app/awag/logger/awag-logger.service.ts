/* Generated by AWAG */
import { Injectable } from '@angular/core';

import { AWAG_LOGGER_LOGLEVEL } from './awag-logger-loglevel';
import { AwagEnvironmentService } from '../awag-environment.service';

/**
 * @description
 * AWAGの共通ログサービス
 */
@Injectable({
  providedIn: 'root'
})
export class AwagLoggerService {
  /**
   * @constructor
   * Overwrite AwagLoggerService logging function by console based on LogLevel
   */
  constructor(
    awagEnvironment: AwagEnvironmentService | null
  ) {
    if (!awagEnvironment) {
      return;
    }
    if (awagEnvironment.logLevel < AWAG_LOGGER_LOGLEVEL.FATAL) {
      // no function overwrite
      return;
    }
    this.fatal = console.error.bind(console);
    if (awagEnvironment.logLevel < AWAG_LOGGER_LOGLEVEL.ERROR) {
      return;
    }
    this.error = console.error.bind(console);
    if (awagEnvironment.logLevel < AWAG_LOGGER_LOGLEVEL.WARN) {
      return;
    }
    this.warn = console.warn.bind(console);
    if (awagEnvironment.logLevel < AWAG_LOGGER_LOGLEVEL.INFO) {
      return;
    }
    this.info = console.info.bind(console);
    if (awagEnvironment.logLevel < AWAG_LOGGER_LOGLEVEL.DEBUG) {
      return;
    }
    this.debug = console.debug.bind(console);
    if (awagEnvironment.logLevel < AWAG_LOGGER_LOGLEVEL.DEVELOP) {
      return;
    }
    this.develop = console.debug.bind(console);
    if (awagEnvironment.logLevel < AWAG_LOGGER_LOGLEVEL.TRACE) {
      return;
    }
    this.trace = console.trace.bind(console);
  }

  /**
   * @description
   * log fatal message.
   **/
  fatal(...args: any[]) {
    // nop
  }

  /**
   * @description
   * log error message.
   **/
  error(...args: any[]) {
    // nop
  }

  /**
   * @description
   * log warn message.
   **/
  warn(...args: any[]) {
    // nop
  }

  /**
   * @description
   * log info message.
   **/
  info(...args: any[]) {
    // nop
  }

  /**
   * @description
   * log debug message.
   **/
  debug(...args: any[]) {
    // nop
  }

  /**
   * @description
   * log develop message.
   **/
  develop(...args: any[]) {
    // nop
  }

  /**
   * @description
   * log trace message.
   **/
  trace(...args: any[]) {
    // nop
  }
}
