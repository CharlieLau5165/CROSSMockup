/* Generated by AWAG */
import { ApplicationConfig, provideBrowserGlobalErrorListeners, importProvidersFrom, provideZoneChangeDetection } from '@angular/core';
import { provideRouter, withRouterConfig } from '@angular/router';
import { routes } from './app.routes';
import { provideAnimations } from '@angular/platform-browser/animations';
import { HTTP_INTERCEPTORS, HttpClient, provideHttpClient, withInterceptorsFromDi } from '@angular/common/http';
import { provideTranslateService, TranslateLoader } from '@ngx-translate/core';
import { NgbDateAdapter, NgbDatepickerI18n } from '@ng-bootstrap/ng-bootstrap';
import { environment } from '../environments/environment';

import { AwagLanguageSupportInterceptor } from './awag/language-support/awag-language-support.interceptor';
import { AWAGTranslateLoader } from './awag/awag-translate-loader';
import { AwagSharedModule } from './awag/awag-shared.module';
import { AwagNgbDateAdapter, AwagNgbDatepickerI18n } from './awag/awag-bootstrap-components';

export const appConfig: ApplicationConfig = {
  providers: [
    provideBrowserGlobalErrorListeners(),
    provideZoneChangeDetection({ eventCoalescing: true }),
    provideRouter(routes, withRouterConfig({
      canceledNavigationResolution: 'computed'
    })),
    provideAnimations(),
    provideHttpClient(
      withInterceptorsFromDi()
    ),
    provideTranslateService({
      loader: {
        provide: TranslateLoader,
        useFactory: HttpLoaderFactory,
        deps: [HttpClient]
      }
    }),
    importProvidersFrom(
      AwagSharedModule.forRoot(environment),
    ),
    {
      provide: NgbDateAdapter,
      useClass: AwagNgbDateAdapter
    },
    {
      provide: NgbDatepickerI18n,
      useClass: AwagNgbDatepickerI18n
    },
    {
      provide: HTTP_INTERCEPTORS,
      useClass: AwagLanguageSupportInterceptor,
      multi: true
    }
  ]
};
export function HttpLoaderFactory(http: HttpClient) {
  return new AWAGTranslateLoader(http);
}
