/* Generated by AWAG */
import { Component } from '@angular/core';

import { InputcustomerInputComponent } from './inputcustomer-input.component';
import { AwagSharedModule } from '../../awag/awag-shared.module';
import { AppCommonModule } from '../../common/app-common.module';
import { AwagError } from '../../awag/awag-error';

/**
 * @description
 * Screen custom component
 * メニュー：Inputcustomer (お客様登録)
 * 画面：Input (登録)
 * @extends {InputcustomerInputComponent}
 */
@Component({
  selector: 'app-inputcustomer-input',
  imports: [AppCommonModule, AwagSharedModule],
  templateUrl: './inputcustomer-input.component.html',
  providers: InputcustomerInputComponent.providers
})
export class InputcustomerInputCustomComponent extends InputcustomerInputComponent {

  /**
   * @description
   * callback function
   * @param {string} message
   */
  sampleCallback(message: string) {
    console.log(message);
    alert(message);
  }

  /**
   * @description
   * Custom logic for confirm (登録確認)
   * @param {*} model Model data of screen
   * @returns Edited model data
   */
  protected override confirmCustomLogic(model: any) {
    // customize logic here
    // 相関チェック
    if (model.nameen.startsWith('IBM')) {// nameenは必須項目
/*      this.showError(new AwagError('E003', 'IBMで始まる登録名は禁止です。')); */// NOSONAR
      this.showError(new AwagError('E003', this.translate.instant('custom.msg.E003')));
      this.awagContext.setNextUrl(null); // 次画面をクリアします。
      this.awagCommon.scrollToTop(); // 相関チェックエラーはtop表示
      this.awagAfterViewInit();
    }
    return model;
  }

  /**
   * @description
   * Pre API call logic for houjinnoAwagAutoComplete (法人番号 awagAutoComplete)
   * @param {*} model Model data of screen
   * @returns Edited model data
   *
  protected override houjinnoAwagAutoCompletePreCallLogic(model: any) {
    // customize logic here
    return model;
  }*/

  /**
   * @description
   * API success custom logic for houjinnoAwagAutoComplete (法人番号 awagAutoComplete)
   * @param {*} res HTTP response
   * @returns Edited HTTP response
   *
  protected override houjinnoAwagAutoCompleteSuccessCustomLogic(res: any) {
    // customize logic here
    return res;
  }*/

  /**
   * @description
   * API error custom logic for houjinnoAwagAutoComplete (法人番号 awagAutoComplete)
   * @param {*} error HTTP error response
   * @param {*} model Model data of screen
   *
  protected override houjinnoAwagAutoCompleteErrorCustomLogic(error: any, model: any) {
    // customize logic here
    return model;
  }*/

  /**
   * @description
   * Custom logic for awagInit (初期処理)
   * @param {*} model Model data of screen
   * @returns Edited model data
   */
  protected override awagInitCustomLogic(model: any) {
    if (this.model.custclass1) {
      const url = this.awagCommon.getEnvironment().apiBaseUrl + '/app/api/codemaster/search?category=' + this.model.custclass1 + '&language=' + this.awagLanguageSupport.getCurrentLanguage();
      this.appNameValue.loadNameValueFrom(url, this.class2OptsCode);
      const { custclass2 } = model;
      setTimeout(() => {
        this.model.custclass2 = custclass2;
      }, 250);
      model.custclass2 = null;
    }
    // ファンクションキー制御
    this.subscription.add(this.translate.onLangChange.subscribe(() => {
      this.addFunctionKey();
    }));
    this.addFunctionKey();
    return model;
  }

  /**
   * ファンクションキー制御を再登録する
   */
  private addFunctionKey() {
    this.awagCommon.clearFunctionKey();
    this.awagCommon.addFunctionKey('F1', this.awagLanguageSupport.getTranslated('custom.prj.uc.inputcustomer.sc.input.F1Label'), () => this.sampleCallback('F1 key pressed.'));
    this.awagCommon.addFunctionKey('F2', this.awagLanguageSupport.getTranslated('custom.prj.uc.inputcustomer.sc.input.F2Label'), () => this.sampleCallback('F2 key pressed.'));
    this.awagCommon.addFunctionKey('F3', this.awagLanguageSupport.getTranslated('custom.prj.uc.inputcustomer.sc.input.F3Label'), () => this.sampleCallback('F3 key pressed.'));
    this.awagCommon.addFunctionKey('F4', this.awagLanguageSupport.getTranslated('custom.prj.uc.inputcustomer.sc.input.F4Label'), () => this.sampleCallback('F4 key pressed.'));
    this.awagCommon.addFunctionKey('F5', '', () => this.sampleCallback('F5 key pressed.'));
    this.awagCommon.addFunctionKey('F6', '', () => this.sampleCallback('F6 key pressed.'));
    this.awagCommon.addFunctionKey('F7', '', () => this.sampleCallback('F7 key pressed.'));
    this.awagCommon.addFunctionKey('F8', '', () => this.sampleCallback('F8 key pressed.'));
    this.awagCommon.addFunctionKey('F9', '', () => this.sampleCallback('F9 key pressed.'));
    this.awagCommon.addFunctionKey('F10', '', () => this.sampleCallback('F10 key pressed.'));
    this.awagCommon.addFunctionKey('F11', '', () => this.sampleCallback('F11 key pressed.'));
    this.awagCommon.addFunctionKey('F12', '', () => this.sampleCallback('F12 key pressed.'));
  }

  /**
   * @description
   * Custom logic for inchargenameAwagOnClickTextFieldButton (担当者名 awagOnClickTextFieldButton)
   * @param {*} model Model data of screen
   * @returns Edited model data
   *
  protected override inchargenameAwagOnClickTextFieldButtonCustomLogic(model: any) {
    // customize logic here
    return model;
  }*/

  /**
   * @description
   * Custom logic for custclass1OnChange (お客様区分1 onChange)
   * @param {*} model Model data of screen
   * @returns Edited model data
   */
  protected override custclass1OnChangeCustomLogic(model: any) {
    // customize logic here
    if (model.custclass1) {
      const url = this.awagCommon.getEnvironment().apiBaseUrl + '/app/api/codemaster/search?category=' + model.custclass1 + '&language=' + this.awagLanguageSupport.getCurrentLanguage();
      this.appNameValue.loadNameValueFrom(url, this.class2OptsCode);
      const { custclass2 } = model;
      setTimeout(() => {
        this.model.custclass2 = custclass2;
      }, 250);
      model.custclass2 = null;
    } else {
      this.class2OptsCode.length = 0;
    }
    model.custclass2 = null;
    return this.model;
  }

}
