/* Generated by AWAG */
import { Component } from '@angular/core';
import { Observable } from 'rxjs';

import { EmployeeUpdateComponent } from './employee-update.component';
import { AwagSharedModule } from '../../awag/awag-shared.module';
import { AppCommonModule } from '../../common/app-common.module';

/**
 * @description
 * Screen custom component
 * メニュー：Employee (社員情報メンテ)
 * 画面：Update (社員更新)
 * @extends {EmployeeUpdateComponent}
 */
@Component({
  selector: 'app-employee-update',
  imports: [AppCommonModule, AwagSharedModule],
  templateUrl: './employee-update.component.html',
  providers: EmployeeUpdateComponent.providers
})
export class EmployeeUpdateCustomComponent extends EmployeeUpdateComponent {

  /**
   * @description
   * Custom logic for confirm (更新確認)
   * @param {*} model Model data of screen
   * @returns Edited model data
   *
  protected override confirmCustomLogic(model: any) {
    // customize logic here
    return model;
  }*/

  /**
   * @description
   * Custom logic for awagGoback (検索へ戻る)
   * @param {*} model Model data of screen
   * @returns Edited model data
   *
  protected override awagGobackCustomLogic(model: any) {
    // customize logic here
    return model;
  }*/

  /**
   * @description
   * Custom logic for awagInit (初期処理)
   * @param {*} model Model data of screen
   * @returns Edited model data
   */
  protected override awagInitCustomLogic(model: any) {
    // customize logic here
    this.enrollmentStatusOptsCode.shift();
    return model;
  }

  /**
   * 画面クローズや更新などのアンロードが行われる前のカスタマイズ処理を実装します。
   * @param event BeforeUnloadEvent
   *
  protected override beforeUnloadCustomLogic(event: any) {
    // customize logic here
  }*/

  /**
   * ルートを非アクティブにするかどうかのカスタマイズガード判定処理を実装します。
   * @param nextUrl 次画面のURL
   * @returns 画面遷移を継続する場合にはtrue、中断する場合にはfalse
   */
  protected override canDeactivateCustomLogic(nextUrl: string): Observable<boolean> | Promise<boolean> | boolean {
    let navigation: Observable<boolean> | Promise<boolean> | boolean = true;
    if (nextUrl != '/employee/updateconfirm' && this.mainForm?.form.dirty) {
      navigation = super.canDeactivateCustomLogic(nextUrl);
    }
    return navigation;
  }
}
