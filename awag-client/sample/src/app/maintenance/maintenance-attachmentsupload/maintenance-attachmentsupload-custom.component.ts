/* Generated by AWAG */
import { Component } from '@angular/core';

import { MaintenanceAttachmentsuploadComponent } from './maintenance-attachmentsupload.component';
import { AwagSharedModule } from '../../awag/awag-shared.module';
import { AppCommonModule } from '../../common/app-common.module';

/**
 * @description
 * Screen custom component
 * メニュー：Maintenance (お客様情報メンテ)
 * 画面：Attachmentsupload (アップロード確認)
 * @extends {MaintenanceAttachmentsuploadComponent}
 */
@Component({
  selector: 'app-maintenance-attachmentsupload',
  imports: [AppCommonModule, AwagSharedModule],
  templateUrl: './maintenance-attachmentsupload.component.html',
  providers: MaintenanceAttachmentsuploadComponent.providers
})
export class MaintenanceAttachmentsuploadCustomComponent extends MaintenanceAttachmentsuploadComponent {

  /**
   * @description
   * Pre API call logic for addAttach (追加)
   * @param {*} model Model data of screen
   * @returns Edited model data
   *
  protected override addAttachPreCallLogic(model: any) {
    // customize logic here
    return model;
  }*/

  /**
   * @description
   * API success custom logic for addAttach (追加)
   * @param {*} res HTTP response
   * @returns Edited HTTP response
   */
  protected override addAttachSuccessCustomLogic(res: any) {
    this.awagFilelist.clear();
    this.model.files = [];
    this.model.comment = '';
    this.model.commentExt = '';
    return this.model;
  }

  /**
   * @description
   * API error custom logic for addAttach (追加)
   * @param {*} error HTTP error response
   * @param {*} model Model data of screen
   */
  protected override addAttachErrorCustomLogic(error: any, model: any) {
    // customize logic here
    this.initializeFiles();
    return model;
  }

  /**
   * @description
   * Custom logic for awagGoback (戻る)
   * @param {*} model Model data of screen
   * @returns Edited model data
   *
  protected override awagGobackCustomLogic(model: any) {
    // customize logic here
    return model;
  }*/

  /**
   * @description
   * Custom logic for delete (削除)
   * @param {*} model Model data of screen
   * @param {number} index Index of selected row
   * @param {*} item Model data of selected item
   * @returns Edited model data of selected item
   */
  protected override deleteCustomLogic(model: any, index: number, item: any) {
    // customize logic here
    this.awagFilelist.removeFile(item.id, index);
    this.initializeFiles();
    if (item.id == 'attachExt') {
      this.model.commentExt = '';
    } else {
      this.model.comment = '';
    }
    return this.model;
  }

  /**
   * @description
   * Custom logic for awagInit (初期処理)
   * @param {*} model Model data of screen
   * @returns Edited model data
   */
  protected override awagInitCustomLogic(model: any) {
    // customize logic here
    this.initializeFiles();
    return model;
  }

  /**
   * @description
   * Initialize files
   */
  private initializeFiles() {
    // Get FileList data
    this.model.attach = this.awagFilelist.files['attach'];
    this.model.attachExt = this.awagFilelist.files['attachExt'];
    // Initialize data for table
    const files = [];
    for (const [key] of Object.entries(this.awagFilelist.files)) {
      for (const file of this.awagFilelist.files[key]) {
        file.id = key; // set id for reference when deleting file from the list
        file.preview = null;
        if (key == 'attachExt') {
          file.comment = this.model.commentExt;
        } else {
          file.comment = this.model.comment;
        }
        files.push(file);
        // Image preview
        if (file.type.match('image.*')) {
          const reader = new FileReader();
          reader.onload = function () {
            file.preview = reader.result;
          };
          reader.readAsDataURL(file);
        }
      }
    }
    this.model.files = files;
  }

}
